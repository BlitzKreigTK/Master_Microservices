#Application Name
spring.application.name=configserver

#For file system stored properties its native otherwise for github it will be git  
#spring.profiles.active=native
spring.profiles.active=git

#Location for each configuration files stored in project
#spring.cloud.config.server.native.search-locations=classpath:/config

#Location for each configuration files stored in some file location
#spring.cloud.config.server.native.search-locations=file:///G://Master Microservices//config

#Location for each configuration files stored in some git repository remote location
spring.cloud.config.server.git.uri=https://github.com/BlitzKreigTK/Microservice_Properties.git
#Git clone is true
spring.cloud.config.server.git.clone-on-start=true
#Git branch
spring.cloud.config.server.git.default-label=master

#Encrypting key
encrypt.key=blitzkreig

#Server port
server.port=8071


##Micrometer related properties
#100% means all transactions will be logged in Zipkin, .5 means 50% and so on
management.tracing.sampling.probability=1.0
#Zipkin URL
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
#Log pattern
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

##Rabbit MQ properties for Sleuth
#By default its web for synchronous but in this case its Rabbit MQ asynchronous
#spring.zipkin.sender.type=rabbit
#Name of the queue to which sleuth message will be sent in Rabbit MQ
#spring.zipkin.rabbitmq.queue=zipkin
#Server of Rabbit MQ
#spring.rabbitmq.host=localhost
#15672 is WebUI port whereas 5672 is management port for Rabbit MQ
#spring.rabbitmq.port=5672
#Credentials for Rabbit MQ login
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest